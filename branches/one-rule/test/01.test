#### loading module ####
load
expect "register"
########################

#### typical example ####
rule_set "SSH" "2000,2001"
expect "SSH,(A)" 

rule_check "SSH" "22"
expect "SSH,(E)"

knock "10.10.0.1" "22"
expect "PASS FAIL"
knock "10.10.0.1" "2000"
expect "MATCHING"
knock "10.10.0.1" "2001"
expect "ALLOWED"
knock "10.10.0.1" "22"
expect "PASS OK"
########################

#### typical example with 2 peers ####
rule_set "HTTP" "2002,2003,2004"
expect "HTTP,(A)" 

rule_check "HTTP" "80"
expect "HTTP,(E)"

knock "10.10.0.2" "80"
expect "PASS FAIL"
knock "10.10.0.2" "2002"
expect "MATCHING"
knock "10.10.0.2" "2003"
expect "MATCHING"
knock "10.10.0.2" "2004"
expect "ALLOWED"
knock "10.10.0.3" "2002"
expect "MATCHING"
knock "10.10.0.3" "2003"
expect "MATCHING"
knock "10.10.0.3" "2004"
expect "ALLOWED"
knock "10.10.0.2" "80"
expect "PASS OK"
knock "10.10.0.3" "80"
expect "PASS OK"
# a third peer must fail
knock "10.10.0.4" "80"
expect "PASS FAIL"
########################

#### big example ####
rule_set "BIG" "4000,4001,4002,4003,4004"
expect "BIG,(A)" 

rule_check "BIG" "80"
expect "BIG,(E)"

knock "10.10.0.20" "80"
expect "PASS FAIL"
knock "10.10.0.20" "4000"
expect "MATCHING"
knock "10.10.0.20" "4001"
expect "MATCHING"
knock "10.10.0.20" "4002"
expect "MATCHING"
knock "10.10.0.20" "4003"
expect "MATCHING"
knock "10.10.0.20" "4004"
expect "ALLOWED"
knock "10.10.0.20" "80"
expect "PASS OK"
########################

#### miss one knock ####
rule_set "MISS" "9990,9991"
expect "MISS,(A)" 

rule_check "MISS" "80"
expect "MISS,(E)"

knock "10.10.0.3" "9990"
expect "MATCHING"

knock "10.10.0.3" "9992"
expect "DIDN'T MATCH"

knock "10.10.0.3" "9991"
expect "ALLOWED"
########################

#### unloading module ####
#unload
#expect "unregister"
########################

# VERIFICAR QUE TODOS LOS PEERS Y REGLAS FUERON BORRADOS!
